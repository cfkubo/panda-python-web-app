apiVersion: v1
kind: Service
metadata:
  name: iot-panda-python-ora-service
spec:
  selector:
    app: iot-panda-python-ora
  ports:
  - protocol: "TCP"
    port: 8080
    targetPort: 8080
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-panda-python-ora
spec:
  selector:
    matchLabels:
      app: iot-panda-python-ora
  replicas: 1
  template:
    metadata:
      labels:
        app: iot-panda-python-ora
    spec:
      containers:
      - name: iot-panda-python-ora
        image: northamerica-northeast1-docker.pkg.dev/pa-mkillens/arul-repo/iot-ora:v6
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
      imagePullSecrets:
        - name: gcr-io

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: panda-oracle
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod-contour #letsencrypt-prod
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.class: contour
    kubernetes.io/tls-acme: "true"
spec:
  tls:
  - secretName: panda-oracle
    hosts:
    - panda-oracle.arullab.com
  rules:
  - host: panda-oracle.arullab.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: iot-panda-python-ora-service
            port:
              number: 8080


# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: py-ingress-cert
# spec:
#   secretName: upstream-rmq
#   commonName: python.arullab.com
#   dnsNames:
#   - python.arullab.com
#   issuerRef:
#     name: letsencrypt-prod
#     kind: ClusterIssuer
#
# ---
# apiVersion: projectcontour.io/v1
# kind: HTTPProxy
# metadata:
#   name: py-ingress-proxy
# spec:
#   virtualhost:
#     fqdn: "python.arullab.com"
#     tls:
#       secretName: py-ingres
#   routes:
#    - conditions:
#      - prefix: ""
#      services:
#        - name: iot-panda-python-ora-service
#          port: 6000
